- name: instalando docker numa VM
  hosts: all
  gather_facts: yes
  vars:
    keyrings_dir: /etc/apt/keyrings
    docker_list: /etc/apt/sources.list.d/docker.list
  tasks:
    # # Add Docker's official GPG key:
    # sudo apt-get update
    # sudo apt-get install ca-certificates curl
    # sudo install -m 0755 -d /etc/apt/keyrings
    # sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
    # sudo chmod a+r /etc/apt/keyrings/docker.asc

    # # Add the repository to Apt sources:
    # echo \
      # "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
      # $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
      # sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    # sudo apt-get update


    - name: atualizando cache do apt
      apt:
        update_cache: yes
      when: ansible_distribution == "Ubuntu"

    - name: instalar dependencias (ca-certificates curl)
      package:
        name:
          - ca-certificates 
          - curl
      when: ansible_distribution == "Ubuntu"

    - name: "checar se diretorio {{ keyrings_dir }} existe"
      stat:
        path: "{{ keyrings_dir }}"
      register: keyrings_exist
      when: ansible_distribution == "Ubuntu"

    - name: fazer download da chave GPG e salvar
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: "{{ keyrings_dir }}/docker.asc"
        mode: "0644"
      when: ansible_distribution == "Ubuntu"

    - name: "adicionando entrada em {{ docker_list }}"
      lineinfile:
        path: "{{ docker_list }}"
        create: true
        state: present
        line: "deb [signed-by={{ keyrings_dir }}/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
      when: ansible_distribution == "Ubuntu"

    - name: checar se o arquivo foi criado
      stat:
        path: "{{ docker_list }}"
      register: docker_list_exist
      when: ansible_distribution == "Ubuntu"

    - debug: var=docker_list_exist.stat.exists

    - name: falhar se arquivo nao foi criado
      fail:
        msg: "arquivo {{ docker_list }} nao foi criado"
      when: ansible_distribution == "Ubuntu" and not docker_list_exist.stat.exists

    - name: atualizando o cache do apt novamente
      apt:
        update_cache: yes
        upgrade: dist
      when: ansible_distribution == "Ubuntu"
      retries: 10
      delay: 5

    # sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
    - name: adicionando pacotes do docker (docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin)
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
      when: ansible_distribution == "Ubuntu"
